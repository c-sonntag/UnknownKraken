language: c
sudo: required

# Only on Linux for now
os:
  - linux

compiler:
  - gcc
  
env:
  global:
    # COVERITY_SCAN_TOKEN
    - secure: "9sswa_IQnoNIJdZrvTr90w"

addons:
  apt:
    packages:
      - gcc
      - cmake
      - pkg-config # To find libraries in CMake with Unix systems
      
  coverity_scan:
    # GitHub project metadata
    project:
      name: swasun/LibUnknownEcho
      version: 1.0
      description: LibUnknownEcho helps to put secure exchanges in the development of C client/server application.

    # Commands to prepare for build_command
    #build_command_prepend: ./configure

    # The command that will be added as an argument to "cov-build" to compile your project for analysis,
    #build_command: make

    # Pattern to match selecting branches that will run analysis. We recommend leaving this set to 'coverity_scan'.
    # Take care in resource usage, and consider the build frequency allowances per
    #   https://scan.coverity.com/faq#frequency
    branch_pattern: master      

before_install:
  # Download, compile and install the last version of Openssl (1.1.0)
  - wget https://www.openssl.org/source/openssl-1.1.0.tar.gz
  - sudo apt-get update -qq
  - tar -zxf openssl-1.1.0.tar.gz
  - cd openssl-1.1.0
  - ./config
  - make --silent
  - sudo make --silent install
  - cd ..
  # Download, compile and install the last version of Zlib (1.2.11)
  - wget https://zlib.net/zlib-1.2.11.tar.gz
  - tar -zxf zlib-1.2.11.tar.gz
  - cd zlib-1.2.11
  - ./configure
  - make --silent
  - sudo make --silent install
  - cd ..

# Compile with CMake in release mode
script:
  - if [[ "${COVERITY_SCAN_BRANCH}" == 1 ]];
      then
        echo "Don't build on coverty_scan branch.";
        exit 0;
    fi
    
  - ./build_release.sh

branches:
    only:
      - master
